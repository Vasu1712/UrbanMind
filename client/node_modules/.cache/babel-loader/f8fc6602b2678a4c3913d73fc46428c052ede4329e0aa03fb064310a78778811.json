{"ast":null,"code":"var _jsxFileName = \"/Users/vasu/Desktop/Projects/UrbanMind/client/src/routes/DashboardLandingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport DashboardSidebar from './DashboardSidebar'; // Import the Sidebar\n\n// Google Maps API script loading\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadGoogleMapsScript = callback => {\n  const existingScript = document.getElementById('googleMaps');\n  const apiKey = process.env.REACT_APP_GMAPS_API_KEY;\n  if (!existingScript && apiKey) {\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}`;\n    script.id = 'googleMaps';\n    document.body.appendChild(script);\n    script.onload = () => {\n      if (window.google && window.google.maps) {\n        callback();\n      } else {\n        console.error('Google Maps API failed to load');\n      }\n    };\n    script.onerror = () => {\n      console.error('Error loading Google Maps API script');\n    };\n  } else if (existingScript) {\n    if (window.google && window.google.maps) {\n      callback();\n    } else {\n      existingScript.onload = () => {\n        callback();\n      };\n    }\n  } else {\n    console.error('No API key found for Google Maps');\n  }\n};\nconst DashboardLandingPage = () => {\n  _s();\n  const mapRef = useRef(null);\n  useEffect(() => {\n    loadGoogleMapsScript(() => {\n      const bangaloreBounds = {\n        north: 13.10,\n        south: 12.80,\n        west: 77.40,\n        east: 77.80\n      };\n      const bangalore = {\n        lat: 12.9716,\n        lng: 77.5946\n      };\n      const map = new window.google.maps.Map(mapRef.current, {\n        center: bangalore,\n        zoom: 12,\n        disableDefaultUI: true,\n        restriction: {\n          latLngBounds: bangaloreBounds,\n          strictBounds: true\n        },\n        styles: [{\n          \"featureType\": \"all\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [{\n            \"color\": \"#000000\"\n          }]\n        }, {\n          \"featureType\": \"road\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [{\n            \"visibility\": \"off\"\n          }]\n        }, {\n          \"featureType\": \"landscape\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [{\n            \"color\": \"#212121\"\n          }]\n        }, {\n          \"featureType\": \"water\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [{\n            \"color\": \"#000000\"\n          }]\n        }]\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex\",\n    children: [/*#__PURE__*/_jsxDEV(DashboardSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        width: '100%',\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardLandingPage, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = DashboardLandingPage;\nexport default DashboardLandingPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardLandingPage\");","map":{"version":3,"names":["React","useEffect","useRef","DashboardSidebar","jsxDEV","_jsxDEV","loadGoogleMapsScript","callback","existingScript","document","getElementById","apiKey","process","env","REACT_APP_GMAPS_API_KEY","script","createElement","src","id","body","appendChild","onload","window","google","maps","console","error","onerror","DashboardLandingPage","_s","mapRef","bangaloreBounds","north","south","west","east","bangalore","lat","lng","map","Map","current","center","zoom","disableDefaultUI","restriction","latLngBounds","strictBounds","styles","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","height","_c","$RefreshReg$"],"sources":["/Users/vasu/Desktop/Projects/UrbanMind/client/src/routes/DashboardLandingPage.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport DashboardSidebar from './DashboardSidebar'; // Import the Sidebar\n\n// Google Maps API script loading\nconst loadGoogleMapsScript = (callback) => {\n  const existingScript = document.getElementById('googleMaps');\n  const apiKey = process.env.REACT_APP_GMAPS_API_KEY;\n\n  if (!existingScript && apiKey) {\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}`;\n    script.id = 'googleMaps';\n    document.body.appendChild(script);\n\n    script.onload = () => {\n      if (window.google && window.google.maps) {\n        callback();\n      } else {\n        console.error('Google Maps API failed to load');\n      }\n    };\n\n    script.onerror = () => {\n      console.error('Error loading Google Maps API script');\n    };\n  } else if (existingScript) {\n    if (window.google && window.google.maps) {\n      callback();\n    } else {\n      existingScript.onload = () => {\n        callback();\n      };\n    }\n  } else {\n    console.error('No API key found for Google Maps');\n  }\n};\n\nconst DashboardLandingPage = () => {\n  const mapRef = useRef(null);\n\n  useEffect(() => {\n    loadGoogleMapsScript(() => {\n      const bangaloreBounds = {\n        north: 13.10,\n        south: 12.80,\n        west: 77.40,\n        east: 77.80,\n      };\n\n      const bangalore = { lat: 12.9716, lng: 77.5946 };\n\n      const map = new window.google.maps.Map(mapRef.current, {\n        center: bangalore,\n        zoom: 12,\n        disableDefaultUI: true,\n        restriction: {\n          latLngBounds: bangaloreBounds,\n          strictBounds: true,\n        },\n        styles: [\n          {\n            \"featureType\": \"all\",\n            \"elementType\": \"geometry\",\n            \"stylers\": [{ \"color\": \"#000000\" }]\n          },\n          {\n            \"featureType\": \"road\",\n            \"elementType\": \"geometry\",\n            \"stylers\": [{ \"visibility\": \"off\" }]\n          },\n          {\n            \"featureType\": \"landscape\",\n            \"elementType\": \"geometry\",\n            \"stylers\": [{ \"color\": \"#212121\" }]\n          },\n          {\n            \"featureType\": \"water\",\n            \"elementType\": \"geometry\",\n            \"stylers\": [{ \"color\": \"#000000\" }]\n          }\n        ]\n      });\n    });\n  }, []);\n\n  return (\n    <div className=\"min-h-screen flex\">\n      {/* Sidebar */}\n      <DashboardSidebar />\n\n      {/* Map */}\n      <div\n        ref={mapRef}\n        style={{ width: '100%', height: '100vh' }}\n      />\n    </div>\n  );\n};\n\nexport default DashboardLandingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}