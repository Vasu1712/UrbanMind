{"ast":null,"code":"var _jsxFileName = \"/Users/vasu/Desktop/Projects/UrbanMind/client/src/routes/DashboardLandingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\n\n// Google Maps API script loading\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadGoogleMapsScript = callback => {\n  const existingScript = document.getElementById('googleMaps');\n  const apiKey = process.env.REACT_APP_GMAPS_API_KEY;\n  if (!existingScript && apiKey) {\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}`;\n    script.id = 'googleMaps';\n    document.body.appendChild(script);\n\n    // Run callback when the script has loaded\n    script.onload = () => {\n      if (callback) callback();\n    };\n  } else if (existingScript && callback) {\n    // If script already exists, run the callback immediately\n    callback();\n  }\n};\nconst DashboardLandingPage = () => {\n  _s();\n  const mapRef = useRef(null);\n  useEffect(() => {\n    loadGoogleMapsScript(() => {\n      if (window.google && window.google.maps) {\n        const bangalore = {\n          lat: 12.9716,\n          lng: 77.5946\n        };\n        const map = new window.google.maps.Map(mapRef.current, {\n          center: bangalore,\n          zoom: 12,\n          disableDefaultUI: true,\n          // Hide all default controls and markers\n          styles: [{\n            \"elementType\": \"geometry\",\n            \"stylers\": [{\n              \"color\": \"#212121\"\n            }]\n          }, {\n            \"elementType\": \"labels.icon\",\n            \"stylers\": [{\n              \"visibility\": \"off\"\n            }]\n          }, {\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{\n              \"color\": \"#757575\"\n            }]\n          }, {\n            \"elementType\": \"labels.text.stroke\",\n            \"stylers\": [{\n              \"color\": \"#212121\"\n            }]\n          }, {\n            \"featureType\": \"administrative\",\n            \"elementType\": \"geometry\",\n            \"stylers\": [{\n              \"color\": \"#757575\"\n            }]\n          }, {\n            \"featureType\": \"administrative.country\",\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{\n              \"color\": \"#9e9e9e\"\n            }]\n          }, {\n            \"featureType\": \"administrative.locality\",\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{\n              \"color\": \"#bdbdbd\"\n            }]\n          }, {\n            \"featureType\": \"poi\",\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{\n              \"color\": \"#757575\"\n            }]\n          }, {\n            \"featureType\": \"poi.park\",\n            \"elementType\": \"geometry\",\n            \"stylers\": [{\n              \"color\": \"#181818\"\n            }]\n          }, {\n            \"featureType\": \"poi.park\",\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{\n              \"color\": \"#616161\"\n            }]\n          }, {\n            \"featureType\": \"poi.park\",\n            \"elementType\": \"labels.text.stroke\",\n            \"stylers\": [{\n              \"color\": \"#1b1b1b\"\n            }]\n          }, {\n            \"featureType\": \"road\",\n            \"elementType\": \"geometry.fill\",\n            \"stylers\": [{\n              \"color\": \"#2c2c2c\"\n            }]\n          }, {\n            \"featureType\": \"road\",\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{\n              \"color\": \"#8a8a8a\"\n            }]\n          }, {\n            \"featureType\": \"road.arterial\",\n            \"elementType\": \"geometry\",\n            \"stylers\": [{\n              \"color\": \"#373737\"\n            }]\n          }, {\n            \"featureType\": \"road.highway\",\n            \"elementType\": \"geometry\",\n            \"stylers\": [{\n              \"color\": \"#3c3c3c\"\n            }]\n          }, {\n            \"featureType\": \"road.highway.controlled_access\",\n            \"elementType\": \"geometry\",\n            \"stylers\": [{\n              \"color\": \"#4e4e4e\"\n            }]\n          }, {\n            \"featureType\": \"road.local\",\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{\n              \"color\": \"#616161\"\n            }]\n          }, {\n            \"featureType\": \"transit\",\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{\n              \"color\": \"#757575\"\n            }]\n          }, {\n            \"featureType\": \"water\",\n            \"elementType\": \"geometry\",\n            \"stylers\": [{\n              \"color\": \"#000000\"\n            }]\n          }, {\n            \"featureType\": \"water\",\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{\n              \"color\": \"#3d3d3d\"\n            }]\n          }] // Night mode styles\n        });\n      } else {\n        console.error('Google Maps API failed to load');\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-tl from-bg1 via-bg2 to-bg1 text-white flex flex-col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        width: '100%',\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardLandingPage, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = DashboardLandingPage;\nexport default DashboardLandingPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardLandingPage\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","loadGoogleMapsScript","callback","existingScript","document","getElementById","apiKey","process","env","REACT_APP_GMAPS_API_KEY","script","createElement","src","id","body","appendChild","onload","DashboardLandingPage","_s","mapRef","window","google","maps","bangalore","lat","lng","map","Map","current","center","zoom","disableDefaultUI","styles","console","error","className","children","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vasu/Desktop/Projects/UrbanMind/client/src/routes/DashboardLandingPage.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\n// Google Maps API script loading\nconst loadGoogleMapsScript = (callback) => {\n  const existingScript = document.getElementById('googleMaps');\n  const apiKey = process.env.REACT_APP_GMAPS_API_KEY;\n\n  if (!existingScript && apiKey) {\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}`;\n    script.id = 'googleMaps';\n    document.body.appendChild(script);\n\n    // Run callback when the script has loaded\n    script.onload = () => {\n      if (callback) callback();\n    };\n  } else if (existingScript && callback) {\n    // If script already exists, run the callback immediately\n    callback();\n  }\n};\n\nconst DashboardLandingPage = () => {\n  const mapRef = useRef(null);\n\n  useEffect(() => {\n    loadGoogleMapsScript(() => {\n      if (window.google && window.google.maps) {\n        const bangalore = { lat: 12.9716, lng: 77.5946 };\n\n        const map = new window.google.maps.Map(mapRef.current, {\n          center: bangalore,\n          zoom: 12,\n          disableDefaultUI: true, // Hide all default controls and markers\n          styles: [\n            {\n              \"elementType\": \"geometry\",\n              \"stylers\": [{ \"color\": \"#212121\" }]\n            },\n            {\n              \"elementType\": \"labels.icon\",\n              \"stylers\": [{ \"visibility\": \"off\" }]\n            },\n            {\n              \"elementType\": \"labels.text.fill\",\n              \"stylers\": [{ \"color\": \"#757575\" }]\n            },\n            {\n              \"elementType\": \"labels.text.stroke\",\n              \"stylers\": [{ \"color\": \"#212121\" }]\n            },\n            {\n              \"featureType\": \"administrative\",\n              \"elementType\": \"geometry\",\n              \"stylers\": [{ \"color\": \"#757575\" }]\n            },\n            {\n              \"featureType\": \"administrative.country\",\n              \"elementType\": \"labels.text.fill\",\n              \"stylers\": [{ \"color\": \"#9e9e9e\" }]\n            },\n            {\n              \"featureType\": \"administrative.locality\",\n              \"elementType\": \"labels.text.fill\",\n              \"stylers\": [{ \"color\": \"#bdbdbd\" }]\n            },\n            {\n              \"featureType\": \"poi\",\n              \"elementType\": \"labels.text.fill\",\n              \"stylers\": [{ \"color\": \"#757575\" }]\n            },\n            {\n              \"featureType\": \"poi.park\",\n              \"elementType\": \"geometry\",\n              \"stylers\": [{ \"color\": \"#181818\" }]\n            },\n            {\n              \"featureType\": \"poi.park\",\n              \"elementType\": \"labels.text.fill\",\n              \"stylers\": [{ \"color\": \"#616161\" }]\n            },\n            {\n              \"featureType\": \"poi.park\",\n              \"elementType\": \"labels.text.stroke\",\n              \"stylers\": [{ \"color\": \"#1b1b1b\" }]\n            },\n            {\n              \"featureType\": \"road\",\n              \"elementType\": \"geometry.fill\",\n              \"stylers\": [{ \"color\": \"#2c2c2c\" }]\n            },\n            {\n              \"featureType\": \"road\",\n              \"elementType\": \"labels.text.fill\",\n              \"stylers\": [{ \"color\": \"#8a8a8a\" }]\n            },\n            {\n              \"featureType\": \"road.arterial\",\n              \"elementType\": \"geometry\",\n              \"stylers\": [{ \"color\": \"#373737\" }]\n            },\n            {\n              \"featureType\": \"road.highway\",\n              \"elementType\": \"geometry\",\n              \"stylers\": [{ \"color\": \"#3c3c3c\" }]\n            },\n            {\n              \"featureType\": \"road.highway.controlled_access\",\n              \"elementType\": \"geometry\",\n              \"stylers\": [{ \"color\": \"#4e4e4e\" }]\n            },\n            {\n              \"featureType\": \"road.local\",\n              \"elementType\": \"labels.text.fill\",\n              \"stylers\": [{ \"color\": \"#616161\" }]\n            },\n            {\n              \"featureType\": \"transit\",\n              \"elementType\": \"labels.text.fill\",\n              \"stylers\": [{ \"color\": \"#757575\" }]\n            },\n            {\n              \"featureType\": \"water\",\n              \"elementType\": \"geometry\",\n              \"stylers\": [{ \"color\": \"#000000\" }]\n            },\n            {\n              \"featureType\": \"water\",\n              \"elementType\": \"labels.text.fill\",\n              \"stylers\": [{ \"color\": \"#3d3d3d\" }]\n            }\n          ] // Night mode styles\n        });\n      } else {\n        console.error('Google Maps API failed to load');\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-tl from-bg1 via-bg2 to-bg1 text-white flex flex-col\">\n      <div\n        ref={mapRef}\n        style={{ width: '100%', height: '100vh' }}\n      />\n    </div>\n  );\n};\n\nexport default DashboardLandingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}