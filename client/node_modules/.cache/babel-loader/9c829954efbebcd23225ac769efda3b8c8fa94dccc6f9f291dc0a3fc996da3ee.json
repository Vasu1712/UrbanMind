{"ast":null,"code":"var _jsxFileName = \"/Users/vasu/Desktop/Projects/UrbanMind/client/src/routes/DashboardLandingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\n\n// Google Maps API script loading\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadGoogleMapsScript = callback => {\n  const existingScript = document.getElementById('googleMaps');\n  const apiKey = process.env.GMAPS_API_KEY;\n  if (!existingScript) {\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=env`; // Add your Google Maps API key here\n    script.id = 'googleMaps';\n    document.body.appendChild(script);\n    script.onload = () => {\n      if (callback) callback();\n    };\n  }\n  if (existingScript && callback) callback();\n};\nconst DashboardLandingPage = () => {\n  _s();\n  const mapRef = useRef(null);\n  useEffect(() => {\n    loadGoogleMapsScript(() => {\n      const bangalore = {\n        lat: 12.9716,\n        lng: 77.5946\n      };\n      const map = new window.google.maps.Map(mapRef.current, {\n        center: bangalore,\n        zoom: 12,\n        disableDefaultUI: true,\n        // Hide all default controls and markers\n        styles: [{\n          \"elementType\": \"geometry\",\n          \"stylers\": [{\n            \"color\": \"#212121\"\n          }]\n        }, {\n          \"elementType\": \"labels.icon\",\n          \"stylers\": [{\n            \"visibility\": \"off\"\n          }]\n        }, {\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [{\n            \"color\": \"#757575\"\n          }]\n        }, {\n          \"elementType\": \"labels.text.stroke\",\n          \"stylers\": [{\n            \"color\": \"#212121\"\n          }]\n        }, {\n          \"featureType\": \"administrative\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [{\n            \"color\": \"#757575\"\n          }]\n        }, {\n          \"featureType\": \"administrative.country\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [{\n            \"color\": \"#9e9e9e\"\n          }]\n        }, {\n          \"featureType\": \"administrative.locality\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [{\n            \"color\": \"#bdbdbd\"\n          }]\n        }, {\n          \"featureType\": \"poi\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [{\n            \"color\": \"#757575\"\n          }]\n        }, {\n          \"featureType\": \"poi.park\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [{\n            \"color\": \"#181818\"\n          }]\n        }, {\n          \"featureType\": \"poi.park\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [{\n            \"color\": \"#616161\"\n          }]\n        }, {\n          \"featureType\": \"poi.park\",\n          \"elementType\": \"labels.text.stroke\",\n          \"stylers\": [{\n            \"color\": \"#1b1b1b\"\n          }]\n        }, {\n          \"featureType\": \"road\",\n          \"elementType\": \"geometry.fill\",\n          \"stylers\": [{\n            \"color\": \"#2c2c2c\"\n          }]\n        }, {\n          \"featureType\": \"road\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [{\n            \"color\": \"#8a8a8a\"\n          }]\n        }, {\n          \"featureType\": \"road.arterial\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [{\n            \"color\": \"#373737\"\n          }]\n        }, {\n          \"featureType\": \"road.highway\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [{\n            \"color\": \"#3c3c3c\"\n          }]\n        }, {\n          \"featureType\": \"road.highway.controlled_access\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [{\n            \"color\": \"#4e4e4e\"\n          }]\n        }, {\n          \"featureType\": \"road.local\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [{\n            \"color\": \"#616161\"\n          }]\n        }, {\n          \"featureType\": \"transit\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [{\n            \"color\": \"#757575\"\n          }]\n        }, {\n          \"featureType\": \"water\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [{\n            \"color\": \"#000000\"\n          }]\n        }, {\n          \"featureType\": \"water\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [{\n            \"color\": \"#3d3d3d\"\n          }]\n        }] // This is the night mode style\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-tl from-bg1 via-bg2 to-bg1 text-white flex flex-col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        width: '100%',\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardLandingPage, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = DashboardLandingPage;\nexport default DashboardLandingPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardLandingPage\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","loadGoogleMapsScript","callback","existingScript","document","getElementById","apiKey","process","env","GMAPS_API_KEY","script","createElement","src","id","body","appendChild","onload","DashboardLandingPage","_s","mapRef","bangalore","lat","lng","map","window","google","maps","Map","current","center","zoom","disableDefaultUI","styles","className","children","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vasu/Desktop/Projects/UrbanMind/client/src/routes/DashboardLandingPage.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\n// Google Maps API script loading\nconst loadGoogleMapsScript = (callback) => {\n  const existingScript = document.getElementById('googleMaps');\n  const apiKey = process.env.GMAPS_API_KEY;\n\n  if (!existingScript) {\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=env`; // Add your Google Maps API key here\n    script.id = 'googleMaps';\n    document.body.appendChild(script);\n\n    script.onload = () => {\n      if (callback) callback();\n    };\n  }\n\n  if (existingScript && callback) callback();\n};\n\nconst DashboardLandingPage = () => {\n  const mapRef = useRef(null);\n\n  useEffect(() => {\n    loadGoogleMapsScript(() => {\n      const bangalore = { lat: 12.9716, lng: 77.5946 };\n\n      const map = new window.google.maps.Map(mapRef.current, {\n        center: bangalore,\n        zoom: 12,\n        disableDefaultUI: true, // Hide all default controls and markers\n        styles: [\n          {\n            \"elementType\": \"geometry\",\n            \"stylers\": [{ \"color\": \"#212121\" }]\n          },\n          {\n            \"elementType\": \"labels.icon\",\n            \"stylers\": [{ \"visibility\": \"off\" }]\n          },\n          {\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{ \"color\": \"#757575\" }]\n          },\n          {\n            \"elementType\": \"labels.text.stroke\",\n            \"stylers\": [{ \"color\": \"#212121\" }]\n          },\n          {\n            \"featureType\": \"administrative\",\n            \"elementType\": \"geometry\",\n            \"stylers\": [{ \"color\": \"#757575\" }]\n          },\n          {\n            \"featureType\": \"administrative.country\",\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{ \"color\": \"#9e9e9e\" }]\n          },\n          {\n            \"featureType\": \"administrative.locality\",\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{ \"color\": \"#bdbdbd\" }]\n          },\n          {\n            \"featureType\": \"poi\",\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{ \"color\": \"#757575\" }]\n          },\n          {\n            \"featureType\": \"poi.park\",\n            \"elementType\": \"geometry\",\n            \"stylers\": [{ \"color\": \"#181818\" }]\n          },\n          {\n            \"featureType\": \"poi.park\",\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{ \"color\": \"#616161\" }]\n          },\n          {\n            \"featureType\": \"poi.park\",\n            \"elementType\": \"labels.text.stroke\",\n            \"stylers\": [{ \"color\": \"#1b1b1b\" }]\n          },\n          {\n            \"featureType\": \"road\",\n            \"elementType\": \"geometry.fill\",\n            \"stylers\": [{ \"color\": \"#2c2c2c\" }]\n          },\n          {\n            \"featureType\": \"road\",\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{ \"color\": \"#8a8a8a\" }]\n          },\n          {\n            \"featureType\": \"road.arterial\",\n            \"elementType\": \"geometry\",\n            \"stylers\": [{ \"color\": \"#373737\" }]\n          },\n          {\n            \"featureType\": \"road.highway\",\n            \"elementType\": \"geometry\",\n            \"stylers\": [{ \"color\": \"#3c3c3c\" }]\n          },\n          {\n            \"featureType\": \"road.highway.controlled_access\",\n            \"elementType\": \"geometry\",\n            \"stylers\": [{ \"color\": \"#4e4e4e\" }]\n          },\n          {\n            \"featureType\": \"road.local\",\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{ \"color\": \"#616161\" }]\n          },\n          {\n            \"featureType\": \"transit\",\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{ \"color\": \"#757575\" }]\n          },\n          {\n            \"featureType\": \"water\",\n            \"elementType\": \"geometry\",\n            \"stylers\": [{ \"color\": \"#000000\" }]\n          },\n          {\n            \"featureType\": \"water\",\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{ \"color\": \"#3d3d3d\" }]\n          }\n        ] // This is the night mode style\n      });\n    });\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-tl from-bg1 via-bg2 to-bg1 text-white flex flex-col\">\n      <div\n        ref={mapRef}\n        style={{ width: '100%', height: '100vh' }}\n      />\n    </div>\n  );\n};\n\nexport default DashboardLandingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}